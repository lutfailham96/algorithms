package main

import (
	"bytes"
	"fmt"
)

func main() {
	// k
	k := 4

	var plane bytes.Buffer

	canvasDot := "❤️ "
	width := 60
	height := 60

	cartesian := NewCartesianPlane(canvasDot, width, height)

	// draw plane
	cartesian.Draw()

	// dataSets := Points{
	// 	{X: 4, Y: 13},
	// 	{X: 6, Y: 14},
	// 	{X: 9, Y: 14},
	// 	{X: 8, Y: 12},
	// 	{X: 5, Y: 10},
	// 	{X: 3, Y: 18},
	// 	{X: 4, Y: 16},
	// 	{X: 7, Y: 19},
	// 	{X: 15, Y: 6},
	// 	{X: 18, Y: 9},
	// 	{X: 14, Y: 7},
	// 	{X: 12, Y: 4},
	// 	{X: 13, Y: 8},
	// 	{X: 13, Y: 10},
	// 	{X: 11, Y: 8},
	// 	{X: 19, Y: 2},
	// 	{X: 11, Y: 17},
	// }

	dataSets := Points{
		{X: 28, Y: 29},
		{X: 21, Y: 43},
		{X: 27, Y: 37},
		{X: 22, Y: 44},
		{X: 28, Y: 28},
		{X: 32, Y: 26},
		{X: 20, Y: 30},
		{X: 28, Y: 35},
		{X: 23, Y: 45},
		{X: 22, Y: 45},
		{X: 20, Y: 32},
		{X: 19, Y: 45},
		{X: 27, Y: 36},
		{X: 20, Y: 43},
		{X: 29, Y: 25},
		{X: 26, Y: 35},
		{X: 27, Y: 36},
		{X: 30, Y: 26},
		{X: 21, Y: 32},
		{X: 21, Y: 31},
		{X: 31, Y: 27},
		{X: 29, Y: 27},
		{X: 27, Y: 36},
		{X: 20, Y: 32},
		{X: 20, Y: 31},
		{X: 24, Y: 36},
		{X: 29, Y: 27},
		{X: 26, Y: 36},
		{X: 18, Y: 31},
		{X: 26, Y: 35},
		{X: 23, Y: 44},
		{X: 20, Y: 43},
		{X: 28, Y: 35},
		{X: 22, Y: 42},
		{X: 21, Y: 44},
		{X: 19, Y: 43},
		{X: 20, Y: 44},
		{X: 19, Y: 44},
		{X: 20, Y: 31},
		{X: 29, Y: 26},
		{X: 26, Y: 34},
		{X: 20, Y: 30},
		{X: 25, Y: 37},
		{X: 28, Y: 35},
		{X: 20, Y: 31},
		{X: 22, Y: 32},
		{X: 21, Y: 45},
		{X: 21, Y: 32},
		{X: 21, Y: 44},
		{X: 30, Y: 28},
		{X: 20, Y: 33},
		{X: 30, Y: 26},
		{X: 22, Y: 44},
		{X: 29, Y: 27},
		{X: 29, Y: 29},
		{X: 21, Y: 32},
		{X: 23, Y: 44},
		{X: 21, Y: 30},
		{X: 20, Y: 44},
		{X: 29, Y: 27},
		{X: 20, Y: 43},
		{X: 26, Y: 35},
		{X: 21, Y: 47},
		{X: 21, Y: 32},
		{X: 20, Y: 32},
		{X: 21, Y: 32},
		{X: 19, Y: 44},
		{X: 30, Y: 27},
		{X: 19, Y: 44},
		{X: 21, Y: 32},
		{X: 28, Y: 35},
		{X: 22, Y: 32},
		{X: 22, Y: 44},
		{X: 21, Y: 32},
		{X: 21, Y: 30},
		{X: 22, Y: 45},
		{X: 20, Y: 32},
		{X: 27, Y: 36},
		{X: 30, Y: 26},
		{X: 22, Y: 45},
		{X: 28, Y: 25},
		{X: 26, Y: 35},
		{X: 28, Y: 27},
		{X: 29, Y: 27},
		{X: 22, Y: 45},
		{X: 27, Y: 37},
		{X: 30, Y: 27},
		{X: 26, Y: 36},
		{X: 20, Y: 42},
		{X: 21, Y: 44},
		{X: 26, Y: 34},
		{X: 29, Y: 27},
		{X: 20, Y: 45},
		{X: 20, Y: 32},
		{X: 21, Y: 32},
		{X: 27, Y: 34},
		{X: 28, Y: 28},
		{X: 31, Y: 27},
		{X: 26, Y: 37},
		{X: 18, Y: 32},
		{X: 22, Y: 45},
		{X: 29, Y: 25},
		{X: 22, Y: 44},
		{X: 30, Y: 26},
		{X: 27, Y: 36},
		{X: 30, Y: 27},
		{X: 30, Y: 25},
		{X: 28, Y: 36},
		{X: 21, Y: 42},
		{X: 27, Y: 37},
		{X: 21, Y: 31},
		{X: 21, Y: 33},
		{X: 29, Y: 26},
		{X: 20, Y: 45},
		{X: 29, Y: 27},
		{X: 29, Y: 34},
		{X: 21, Y: 44},
		{X: 28, Y: 27},
		{X: 29, Y: 28},
		{X: 26, Y: 37},
		{X: 22, Y: 32},
		{X: 29, Y: 26},
		{X: 22, Y: 33},
		{X: 28, Y: 26},
		{X: 29, Y: 28},
		{X: 30, Y: 27},
		{X: 29, Y: 26},
		{X: 21, Y: 31},
		{X: 28, Y: 27},
		{X: 20, Y: 30},
		{X: 23, Y: 45},
		{X: 20, Y: 31},
		{X: 20, Y: 31},
		{X: 30, Y: 25},
		{X: 21, Y: 43},
		{X: 21, Y: 31},
		{X: 19, Y: 33},
		{X: 20, Y: 43},
		{X: 26, Y: 34},
		{X: 23, Y: 43},
		{X: 19, Y: 44},
		{X: 21, Y: 32},
		{X: 27, Y: 34},
		{X: 21, Y: 34},
		{X: 28, Y: 37},
		{X: 20, Y: 31},
		{X: 21, Y: 43},
		{X: 25, Y: 35},
		{X: 22, Y: 43},
		{X: 20, Y: 44},
		{X: 21, Y: 44},
		{X: 27, Y: 36},
		{X: 22, Y: 42},
		{X: 26, Y: 36},
		{X: 29, Y: 25},
		{X: 22, Y: 32},
		{X: 22, Y: 45},
		{X: 20, Y: 31},
		{X: 29, Y: 27},
		{X: 27, Y: 36},
		{X: 20, Y: 45},
		{X: 26, Y: 35},
		{X: 27, Y: 35},
		{X: 29, Y: 28},
		{X: 27, Y: 36},
		{X: 19, Y: 31},
		{X: 22, Y: 29},
		{X: 26, Y: 36},
		{X: 29, Y: 27},
		{X: 27, Y: 34},
		{X: 27, Y: 35},
		{X: 21, Y: 45},
		{X: 29, Y: 26},
		{X: 28, Y: 37},
		{X: 21, Y: 34},
		{X: 22, Y: 44},
		{X: 30, Y: 28},
		{X: 30, Y: 27},
		{X: 26, Y: 35},
		{X: 22, Y: 32},
		{X: 31, Y: 27},
		{X: 28, Y: 35},
		{X: 20, Y: 31},
		{X: 21, Y: 32},
		{X: 25, Y: 36},
		{X: 28, Y: 35},
		{X: 27, Y: 37},
		{X: 27, Y: 35},
		{X: 30, Y: 27},
		{X: 21, Y: 43},
		{X: 26, Y: 34},
		{X: 22, Y: 32},
		{X: 27, Y: 36},
		{X: 26, Y: 35},
		{X: 20, Y: 30},
		{X: 21, Y: 31},
		{X: 19, Y: 32},
		{X: 28, Y: 34},
		{X: 20, Y: 31},
		{X: 20, Y: 44},
		{X: 27, Y: 34},
		{X: 22, Y: 32},
		{X: 29, Y: 25},
		{X: 20, Y: 30},
		{X: 27, Y: 35},
		{X: 21, Y: 41},
		{X: 21, Y: 32},
		{X: 22, Y: 46},
		{X: 27, Y: 36},
		{X: 22, Y: 42},
		{X: 28, Y: 36},
		{X: 20, Y: 31},
		{X: 25, Y: 36},
		{X: 28, Y: 36},
		{X: 21, Y: 44},
		{X: 22, Y: 31},
		{X: 22, Y: 31},
		{X: 30, Y: 26},
		{X: 31, Y: 25},
		{X: 26, Y: 35},
		{X: 20, Y: 44},
		{X: 30, Y: 26},
		{X: 30, Y: 26},
		{X: 19, Y: 32},
		{X: 29, Y: 25},
		{X: 19, Y: 32},
		{X: 26, Y: 33},
		{X: 23, Y: 43},
		{X: 22, Y: 44},
		{X: 29, Y: 37},
		{X: 27, Y: 35},
		{X: 21, Y: 46},
		{X: 27, Y: 35},
		{X: 28, Y: 27},
		{X: 21, Y: 32},
		{X: 27, Y: 35},
		{X: 30, Y: 26},
		{X: 21, Y: 32},
		{X: 22, Y: 46},
		{X: 20, Y: 32},
		{X: 31, Y: 27},
		{X: 26, Y: 36},
		{X: 32, Y: 27},
		{X: 21, Y: 44},
		{X: 21, Y: 44},
		{X: 20, Y: 43},
		{X: 21, Y: 44},
		{X: 20, Y: 33},
		{X: 21, Y: 32},
		{X: 22, Y: 41},
		{X: 29, Y: 36},
		{X: 21, Y: 32},
		{X: 29, Y: 26},
		{X: 26, Y: 36},
		{X: 20, Y: 32},
		{X: 20, Y: 33},
		{X: 22, Y: 34},
		{X: 30, Y: 26},
		{X: 30, Y: 27},
		{X: 21, Y: 44},
		{X: 27, Y: 36},
		{X: 26, Y: 36},
		{X: 20, Y: 33},
		{X: 28, Y: 26},
		{X: 23, Y: 45},
		{X: 22, Y: 32},
		{X: 28, Y: 35},
		{X: 22, Y: 44},
		{X: 27, Y: 37},
		{X: 30, Y: 27},
		{X: 28, Y: 26},
		{X: 19, Y: 32},
		{X: 20, Y: 31},
		{X: 29, Y: 34},
		{X: 32, Y: 28},
		{X: 29, Y: 25},
		{X: 28, Y: 28},
		{X: 29, Y: 36},
		{X: 21, Y: 45},
		{X: 20, Y: 44},
		{X: 31, Y: 28},
		{X: 31, Y: 27},
		{X: 28, Y: 34},
		{X: 30, Y: 27},
		{X: 30, Y: 27},
		{X: 32, Y: 27},
		{X: 21, Y: 43},
		{X: 22, Y: 33},
		{X: 21, Y: 45},
		{X: 27, Y: 35},
		{X: 30, Y: 24},
		{X: 29, Y: 27},
		{X: 22, Y: 43},
		{X: 21, Y: 45},
		{X: 21, Y: 44},
		{X: 30, Y: 28},
		{X: 30, Y: 28},
		{X: 26, Y: 36},
		{X: 24, Y: 44},
		{X: 20, Y: 32},
	}

	testData := Point{25, 33}
	cartesian.Plot("😀", &testData)

	kmeans := NewKMean(k, 100)
	// initialize cluster
	kmeans.Compute(dataSets)
	fmt.Println(len(kmeans.Centroids()))

	syms := []string{"💜", "💙", "💚", "🧡"}
	redraw := func() {
		for i := len(dataSets) - 1; i >= 0; i-- {
			p := dataSets[i]
			cartesian.Plot("💛", &p)
		}

		for i, centroid := range kmeans.Centroids() {
			fmt.Println(centroid)
			cartesian.Plot(syms[i], &centroid)
		}
	}

	redraw()

	fmt.Println(kmeans.Clusters())
	fmt.Println("elbow: ", kmeans.WCSS())
	fmt.Println("---------------------------------")

	cartesian.WriteTo(&plane)
	fmt.Print(plane.String())

	classResult := kmeans.Predict(&testData)

	fmt.Println(syms[classResult])
}
